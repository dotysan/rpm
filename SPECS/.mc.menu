shell_patterns=0
# use regular expressions

+ ! t t
@  Do something on the current file
	CMD=%{Enter command}
	$CMD %f
+ t t
@  Do something on the tagged files
	set %t; CMD=%{Enter command}
	while [ -n "$1" ]
	do	$CMD "$1"
		shift
	done

= t d
x  Compress the current subdirectory (tar.xz)
	Pwd=`basename %d /`
	echo -n "Name of the compressed file (without extension) [$Pwd]: "
	read tar
	if [ "$tar"x = x ]; then tar="$Pwd"; fi
	cd .. && tar cf - "$Pwd" | xz -f > "$tar.tar.xz" \
	&& echo "../$tar.tar.xz created."

+ f \.spec$
p  RPM Prepare: extract sources and apply patches
	rpmbuild -bp --nodeps %f |tee .rpmbuild-prepare-%f.log

+ f \.spec$
c  RPM Compile: perform build operations (after prepare)
	unset PERL5LIB
	# also disable local::lib
	unset PERL_LOCAL_LIB_ROOT PERL_MB_OPT PERL_MM_OPT
	# finally sanitize ~, local, sbin, ccache, etc. from path
	PATH=/usr/bin:/bin
	rpmbuild -bc %f |tee .rpmbuild-compile-%f.log

+= f \.spec$
i  RPM Install: prepare, compile, install
	unset PERL5LIB
	# also disable local::lib
	unset PERL_LOCAL_LIB_ROOT PERL_MB_OPT PERL_MM_OPT
	# finally sanitize ~, local, sbin, ccache, etc. from path
	PATH=/usr/bin:/bin
	rpmbuild -bi %f |tee .rpmbuild-install-%f.log

+ f \.spec$
s  RPM Install: short-circuit (without prep/compile)
	rpmbuild -bi --short-circuit %f |tee .rpmbuild-install-short-circuit-%f.log

+ f \.spec$
a  RPM Build: all (binary and source)
	unset PERL5LIB
	# also disable local::lib
	unset PERL_LOCAL_LIB_ROOT PERL_MB_OPT PERL_MM_OPT
	# finally sanitize ~, local, sbin, ccache, etc. from path
	PATH=/usr/bin:/bin
	rpmbuild -ba --clean %f |tee .rpmbuild-all-%f.log
